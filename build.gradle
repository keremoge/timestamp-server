plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.albaraka.tsa'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.bouncycastle:bcprov-jdk18on:1.80'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.80'
    implementation 'org.bouncycastle:bcutil-jdk18on:1.80'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'io.mockk:mockk:1.13.10'
    testImplementation 'com.ninja-squad:springmockk:4.0.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// Docker configuration with Jib
jib {
    from {
        image = "eclipse-temurin:21-jre"
    }
    to {
        image = "timestamp-server:${project.version}"
        tags = ["latest"]
    }
    container {
        jvmFlags = ["-Xms512m", "-Xmx512m"]
        ports = ["8080"]
        mainClass = "com.albaraka.tsa.timestampserver.TimestampServerApplicationKt"
        format = "Docker"
    }
}